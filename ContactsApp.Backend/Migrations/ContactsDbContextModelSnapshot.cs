// <auto-generated />
using System;
using ContactsApp.Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactsApp.Backend.Migrations
{
    [DbContext(typeof(ContactsDbContext))]
    partial class ContactsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Contacts.Data.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Contacts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            DateOfBirth = new DateOnly(1992, 5, 14),
                            Email = "anna.kowalska92@gmail.com",
                            FirstName = "Anna",
                            LastName = "Kowalska",
                            PhoneNumber = "512345678",
                            SubCategoryId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            DateOfBirth = new DateOnly(1987, 11, 3),
                            Email = "michal.nowak87@wp.pl",
                            FirstName = "Michał",
                            LastName = "Nowak",
                            PhoneNumber = "601234567",
                            SubCategoryId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            DateOfBirth = new DateOnly(1990, 2, 27),
                            Email = "k.wisniewska@onet.pl",
                            FirstName = "Katarzyna",
                            LastName = "Wiśniewska",
                            PhoneNumber = "789456123",
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            DateOfBirth = new DateOnly(1989, 7, 19),
                            Email = "piotr.zielinski@gmail.com",
                            FirstName = "Piotr",
                            LastName = "Zieliński",
                            PhoneNumber = "693321789",
                            SubCategoryId = 3
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            DateOfBirth = new DateOnly(1991, 3, 9),
                            Email = "agnieszka.dabrowska@interia.pl",
                            FirstName = "Agnieszka",
                            LastName = "Dąbrowska",
                            PhoneNumber = "530987654",
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 1,
                            DateOfBirth = new DateOnly(1990, 10, 21),
                            Email = "tomwojcik90@o2.pl",
                            FirstName = "Tomasz",
                            LastName = "Wójcik",
                            PhoneNumber = "665443221",
                            SubCategoryId = 4
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 2,
                            DateOfBirth = new DateOnly(1993, 8, 5),
                            Email = "magda.kaminska@onet.eu",
                            FirstName = "Magdalena",
                            LastName = "Kamińska",
                            PhoneNumber = "507111333"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 2,
                            DateOfBirth = new DateOnly(1985, 12, 30),
                            Email = "krz.lewandowski@wp.pl",
                            FirstName = "Krzysztof",
                            LastName = "Lewandowski",
                            PhoneNumber = "602556778"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            DateOfBirth = new DateOnly(1989, 4, 16),
                            Email = "paulina.jankowska89@gmail.com",
                            FirstName = "Paulina",
                            LastName = "Jankowska",
                            PhoneNumber = "723998445"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            DateOfBirth = new DateOnly(1994, 6, 11),
                            Email = "jakub.mazur@interia.eu",
                            FirstName = "Jakub",
                            LastName = "Mazur",
                            PhoneNumber = "511223344"
                        });
                });

            modelBuilder.Entity("Contacts.Data.ContactCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ContactCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Business"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Personal"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Contacts.Data.ContactSubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("ContactSubCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "CEO"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Coworker"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("Contacts.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Contacts.Data.Contact", b =>
                {
                    b.HasOne("Contacts.Data.ContactCategory", "Category")
                        .WithMany("Contacts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Contacts.Data.ContactSubCategory", "SubCategory")
                        .WithMany("Contacts")
                        .HasForeignKey("SubCategoryId");

                    b.Navigation("Category");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("Contacts.Data.ContactCategory", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("Contacts.Data.ContactSubCategory", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
